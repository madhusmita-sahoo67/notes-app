{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Downloads\\\\pointo\\\\notes-app\\\\src\\\\components\\\\AddNoteModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNoteModal({\n  note,\n  onSave,\n  onClose\n}) {\n  _s();\n  const [title, setTitle] = useState(''); // State for note title\n  const [content, setContent] = useState(''); // State for note content\n\n  // Populate form fields when editing a note\n  useEffect(() => {\n    if (note) {\n      setTitle(note.title);\n      setContent(note.content);\n    } else {\n      setTitle('');\n      setContent('');\n    }\n  }, [note]);\n\n  // Function to handle saving the note\n  const handleSave = () => {\n    if (title && content) {\n      onSave({\n        title,\n        content\n      });\n      setTitle('');\n      setContent('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: note ? 'Edit Note' : 'Add Note'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter note title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Content\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter note content\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save\",\n          onClick: handleSave,\n          children: note ? 'Update' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNoteModal, \"s6xv9+LkBWArnjy8QFttJ7dFVj4=\");\n_c = AddNoteModal;\nexport default AddNoteModal;\nvar _c;\n$RefreshReg$(_c, \"AddNoteModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddNoteModal","note","onSave","onClose","_s","title","setTitle","content","setContent","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Downloads/pointo/notes-app/src/components/AddNoteModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Modal.css';\r\n\r\nfunction AddNoteModal({ note, onSave, onClose }) {\r\n  const [title, setTitle] = useState(''); // State for note title\r\n  const [content, setContent] = useState(''); // State for note content\r\n\r\n  // Populate form fields when editing a note\r\n  useEffect(() => {\r\n    if (note) {\r\n      setTitle(note.title);\r\n      setContent(note.content);\r\n    } else {\r\n      setTitle('');\r\n      setContent('');\r\n    }\r\n  }, [note]);\r\n\r\n  // Function to handle saving the note\r\n  const handleSave = () => {\r\n    if (title && content) {\r\n      onSave({ title, content });\r\n      setTitle('');\r\n      setContent('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>{note ? 'Edit Note' : 'Add Note'}</h2> {/* Display appropriate header */}\r\n        <label>\r\n          Title\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter note title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Content\r\n          <textarea\r\n            placeholder=\"Enter note content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n        </label>\r\n        <div className=\"modal-actions\">\r\n          <button className=\"save\" onClick={handleSave}>{note ? 'Update' : 'Save'}</button> {/* Change button text dynamically */}\r\n          <button className=\"cancel\" onClick={onClose}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNoteModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}