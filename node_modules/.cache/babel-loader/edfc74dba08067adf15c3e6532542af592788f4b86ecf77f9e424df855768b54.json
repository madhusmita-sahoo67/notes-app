{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Downloads\\\\pointo\\\\notes-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport NotesList from './components/NotesList';\nimport AddNoteModal from './components/AddNoteModal';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]); // State to store all notes\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n  const [currentNote, setCurrentNote] = useState(null); // State to store the note being edited\n\n  // Function to handle adding or updating a note\n  const saveNote = note => {\n    if (currentNote !== null) {\n      // If editing, update the note\n      const updatedNotes = notes.map((n, index) => index === currentNote ? note : n);\n      setNotes(updatedNotes);\n    } else {\n      // If adding a new note\n      setNotes([...notes, note]);\n    }\n    setIsModalOpen(false); // Close the modal\n    setCurrentNote(null); // Reset the current note state\n  };\n\n  // Function to handle deleting a note\n  const deleteNote = index => {\n    const newNotes = notes.filter((_, i) => i !== index);\n    setNotes(newNotes);\n  };\n\n  // Function to handle opening the modal for editing a note\n  const editNote = index => {\n    setCurrentNote(index); // Set the note index to be edited\n    setIsModalOpen(true); // Open the modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAddNote: () => setIsModalOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: notes,\n      onDeleteNote: deleteNote,\n      onEditNote: editNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(AddNoteModal, {\n      note: currentNote !== null ? notes[currentNote] : null // Pass the note to be edited\n      ,\n      onSave: saveNote,\n      onClose: () => {\n        setIsModalOpen(false); // Close the modal\n        setCurrentNote(null); // Reset the current note state\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gUF+h0jRuKDT2SdZgMzoKLywtbc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","NotesList","AddNoteModal","jsxDEV","_jsxDEV","App","_s","notes","setNotes","isModalOpen","setIsModalOpen","currentNote","setCurrentNote","saveNote","note","updatedNotes","map","n","index","deleteNote","newNotes","filter","_","i","editNote","className","children","onAddNote","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteNote","onEditNote","onSave","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Downloads/pointo/notes-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport NotesList from './components/NotesList';\nimport AddNoteModal from './components/AddNoteModal';\nimport './styles/App.css';\n\nfunction App() {\n  const [notes, setNotes] = useState([]); // State to store all notes\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n  const [currentNote, setCurrentNote] = useState(null); // State to store the note being edited\n\n  // Function to handle adding or updating a note\n  const saveNote = (note) => {\n    if (currentNote !== null) {\n      // If editing, update the note\n      const updatedNotes = notes.map((n, index) =>\n        index === currentNote ? note : n\n      );\n      setNotes(updatedNotes);\n    } else {\n      // If adding a new note\n      setNotes([...notes, note]);\n    }\n    setIsModalOpen(false); // Close the modal\n    setCurrentNote(null); // Reset the current note state\n  };\n\n  // Function to handle deleting a note\n  const deleteNote = (index) => {\n    const newNotes = notes.filter((_, i) => i !== index);\n    setNotes(newNotes);\n  };\n\n  // Function to handle opening the modal for editing a note\n  const editNote = (index) => {\n    setCurrentNote(index); // Set the note index to be edited\n    setIsModalOpen(true); // Open the modal\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAddNote={() => setIsModalOpen(true)} />\n      <NotesList notes={notes} onDeleteNote={deleteNote} onEditNote={editNote} />\n      {isModalOpen && (\n        <AddNoteModal\n          note={currentNote !== null ? notes[currentNote] : null} // Pass the note to be edited\n          onSave={saveNote}\n          onClose={() => {\n            setIsModalOpen(false); // Close the modal\n            setCurrentNote(null); // Reset the current note state\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMc,QAAQ,GAAIC,IAAI,IAAK;IACzB,IAAIH,WAAW,KAAK,IAAI,EAAE;MACxB;MACA,MAAMI,YAAY,GAAGR,KAAK,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KACtCA,KAAK,KAAKP,WAAW,GAAGG,IAAI,GAAGG,CACjC,CAAC;MACDT,QAAQ,CAACO,YAAY,CAAC;IACxB,CAAC,MAAM;MACL;MACAP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,IAAI,CAAC,CAAC;IAC5B;IACAJ,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACvBE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMO,UAAU,GAAID,KAAK,IAAK;IAC5B,MAAME,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKL,KAAK,CAAC;IACpDV,QAAQ,CAACY,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAMI,QAAQ,GAAIN,KAAK,IAAK;IAC1BN,cAAc,CAACM,KAAK,CAAC,CAAC,CAAC;IACvBR,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA,CAACJ,MAAM;MAAC2B,SAAS,EAAEA,CAAA,KAAMjB,cAAc,CAAC,IAAI;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD3B,OAAA,CAACH,SAAS;MAACM,KAAK,EAAEA,KAAM;MAACyB,YAAY,EAAEb,UAAW;MAACc,UAAU,EAAET;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1EtB,WAAW,iBACVL,OAAA,CAACF,YAAY;MACXY,IAAI,EAAEH,WAAW,KAAK,IAAI,GAAGJ,KAAK,CAACI,WAAW,CAAC,GAAG,IAAK,CAAC;MAAA;MACxDuB,MAAM,EAAErB,QAAS;MACjBsB,OAAO,EAAEA,CAAA,KAAM;QACbzB,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACvBE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACxB;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAjDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}